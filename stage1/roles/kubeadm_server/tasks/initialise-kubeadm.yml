---
- name: Check if kubeadm is already initialised
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_admin_check

- name: Initialise kubeadm
  when: not kubernetes_admin_check.stat.exists
  block:
    - name: Create kubeadm-config.yaml file from template
      ansible.builtin.template:
        src: kubeadm-config.yaml.j2
        dest: "{{ ansible_env.HOME }}/kubeadm-config.yaml"
        mode: "0644"

    - name: Initialise kubeadm
      ansible.builtin.command: "kubeadm init --config {{ ansible_env.HOME }}/kubeadm-config.yaml --upload-certs"
      register: kubeadm_init
      changed_when: kubeadm_init.rc != 0

- name: Include copy-kubeconfig role
  ansible.builtin.include_tasks: copy-kubeconfig.yml

- name: Get number of nodes
  ansible.builtin.shell:
    cmd: |
      set -o pipefail && \
      kubectl get nodes --no-headers | wc -l
    executable: /bin/bash
  register: node_count_check
  changed_when: node_count_check.rc != 0

- name: Print node_count_check
  ansible.builtin.debug:
    var: node_count_check

- name: Generate kubeadm join command on primary node
  when: node_count_check.stdout | int < node_count | int
  ansible.builtin.shell:
    cmd: |
      set -o pipefail && \
      echo $(kubeadm token create --print-join-command) \
      --control-plane --apiserver-bind-port=6443 \
      --certificate-key $(kubeadm init phase upload-certs --upload-certs | grep -vw -e certificate -e Namespace)
    executable: /bin/bash
  register: kubeadm_join_command
  changed_when: kubeadm_join_command.rc != 0

- name: Check if kubeadm-config has controlPlaneEndpoint configured
  ansible.builtin.shell:
    cmd: |
      set -o pipefail && \
      kubectl -n kube-system get configmap kubeadm-config -o jsonpath='{.data.ClusterConfiguration}' \
      | grep -q 'controlPlaneEndpoint: {{ ansible_host }}:6443'
    executable: /bin/bash
  register: check_control_plane_endpoint
  changed_when: false
  ignore_errors: true

- name: Update kubeadm-config
  when: check_control_plane_endpoint.rc != 0
  block:
    - name: Update kubeadm-config configmap
      ansible.builtin.shell: |
        set -o pipefail && \
        kubectl -n kube-system get configmap kubeadm-config -o json |
        jq 'if (.data.ClusterConfiguration | contains("controlPlaneEndpoint")) then
        .data.ClusterConfiguration |= sub("controlPlaneEndpoint: .*"; "controlPlaneEndpoint: {{ ansible_host }}:6443")
        else .data.ClusterConfiguration |= . + "\ncontrolPlaneEndpoint: {{ ansible_host }}:6443" end' |
        kubectl apply -f -
      args:
        executable: /bin/bash
      changed_when: false
