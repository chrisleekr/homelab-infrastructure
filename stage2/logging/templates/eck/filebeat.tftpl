apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
  namespace: ${namespace}
spec:
  type: filebeat
  version: 8.15.3
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    filebeat.autodiscover.providers:
    - node: ${"$"}{NODE_NAME}
      type: kubernetes
      hints.enabled: true
      hints.default_config:
        enabled: false # Add enabled: false to the hints.default_config section. This makes Filebeat only collect logs from pods that explicitly enable logging via the co.elastic.logs/enabled: "true" annotation.
        type: container
        paths:
          - /var/log/containers/*${"$"}{data.kubernetes.container.id}.log
        close_removed: true
        close_renamed: true
        close_inactive: 2m
        clean_removed: true
        scan_frequency: 30s
        harvester_buffer_size: 8192
        max_bytes: 5242880
      templates:
      - condition:
          equals:
            kubernetes.namespace: nginx
        config:
        - type: container
          paths:
            - /var/log/containers/nginx-*${"$"}{data.kubernetes.container.id}.log
          processors:
            - dissect:
                tokenizer: "${"%"}{client_ip} - ${"%"}{user} [${"%"}{timestamp}] \"${"%"}{method} ${"%"}{path} ${"%"}{protocol}/${"%"}{?protocol_version}\" ${"%"}{status_code} ${"%"}{size} \"${"%"}{referrer}\" \"${"%"}{agent}\" ${"%"}{request_time} ${"%"}{?upstream_time} [${"%"}{service}] [${"%"}{?trace}] ${"%"}{upstream_addr}:${"%"}{upstream_port} ${"%"}{upstream_size} ${"%"}{?upstream_response_time} ${"%"}{status_code} ${"%"}{request_id}"
                field: "message"
                target_prefix: "nginx.ingress"
                when:
                  or:
                    - contains:
                        message: "HTTP/1.1"
                    - contains:
                        message: "HTTP/2.0"
            - dissect:
                tokenizer: "[${"%"}{client_ip}] [${"%"}{timestamp}] TCP ${"%"}{status_code} ${"%"}{size} ${"%"}{request_time} ${"%"}{upstream_response_time}"
                field: "message"
                target_prefix: "nginx.ingress"
                when:
                  contains:
                    message: " TCP "
      - condition:
          equals:
            kubernetes.annotations.co.elastic.logs/enabled: "true"
        config:
        - type: container
          exclude_files:
            - '^/var/log/containers/nginx-'
          paths:
            - /var/log/containers/*-${"$"}{data.kubernetes.container.id}.log

    processors:
    - drop_event:
        when:
          or:
          - equals:
              kubernetes.namespace: logging
          - equals:
              kubernetes.namespace: prometheus
          - contains:
              message: "kube-probe"
    - add_kubernetes_metadata:
        in_cluster: true
        matchers:
        - logs_path:
            logs_path: /var/log/containers/
    - decode_json_fields:
        fields: ["message"]
        process_array: false
        max_depth: 2        # Increased from 1
        target: "json"
        overwrite_keys: true
        when:
          and:
            - has_fields: ["message"]
            - regexp:
                message: "^[{[].*[}\\]]$"

    logging.level: info
    setup:
      dashboards:
        enabled: true
      ilm:
        enabled: true
        overwrite: false
        policy_name: "filebeat-custom"
        # overwrite: true
        # policy_file: /usr/share/filebeat/ilm/policy.json
      # https://www.elastic.co/guide/en/beats/filebeat/current/configuration-template.html
      template:
        enabled: true
        # A boolean that specifies whether to overwrite the existing template. The default is false. Do not enable this option if you start more than one instance of Filebeat at the same time. It can overload Elasticsearch by sending too many template update requests.
        overwrite: false
        name: "filebeat-custom"
        pattern: "filebeat-custom"
        # settings:
        #   index:
        #     number_of_shards: 1
        #     codec: best_compression
        #     # Add data stream settings
        #     data_stream: {}
        #     lifecycle:
        #       name: filebeat-custom
        # settings:
        #   index:
        #     number_of_shards: 1
        #     codec: best_compression

    # https://www.elastic.co/guide/en/beats/filebeat/current/elasticsearch-output.html
    output.elasticsearch:
      pipeline: "main-pipeline"
      index: "filebeat-custom"
      # https://www.elastic.co/guide/en/beats/filebeat/current/ilm.html
      # ilm:
      #   enabled: true
      #   overwrite: false
      #   policy_name: "filebeat-custom"
      # data_stream:
      #   enabled: true
      #   dataset: custom
      #   # dataset: filebeat-custom
      #   type: logs
      #   namespace: default
      worker: 2 # Increased from 1 to 2 for better parallelism
      bulk_max_size: 50 # Increased from 20 to 50 for better batch processing
      queue.mem.events: 2000 # Increased from 1000 to 2000
      queue.mem.flush.min_events: 1000 # Increased from 512 to 1000
      queue.mem.flush.timeout: 5s # Increased from 1s to 5s to allow more batching
      compression_level: 3 # Changed from 1 to 3 for better compression
      idle_connection_timeout: 60s

  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
          # - name: filebeat-ilm
          #   mountPath: /usr/share/filebeat/ilm
          - name: data
            mountPath: /usr/share/filebeat/data
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        # - name: filebeat-ilm
        #   configMap:
        #     defaultMode: 0600
        #     name: filebeat-ilm
        - name: data
          emptyDir: {}
